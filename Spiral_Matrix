# from random import randint
mas = []
answer = ''
N = 0
satr = ''

def write_answer():
    global answer
    global N
    global mas
    # print(answer)
    print(mas)
    # for x in answer:
    #     if answer.index(x) % N == 0:
    #         print('')
    #     print(x, end='')


def input_matrix():
    global N
    global mas
    global satr
    N = int(input())
    satr = [i for i in range(1, (N*N)+1)]
    #mas = [list(map(int, input().split())) for _ in range(N)]
    mas = [[0]*N for _ in range(N)]


def in_range(x, y):
    global N
    global mas
    if x < 0 or x >= N:
        return False
    if y < 0 or y >= N:
        return False
    if mas[y][x] == -1:
        return False
    return True


def spirale_path():
    x, y = 0, 0
    sx = 1
    sy = 0
    global mas
    global answer
    answer = str(mas[y][x])
    mas[y][x] = -1
    found = True
    while True:
        while in_range(x + sx, y + sy):
            x += sx
            y += sy
            answer = answer + ' ' + str(mas[y][x])
            mas[y][x] = -1
        sx_old = sx
        sx = -sy
        sy = sx_old
        if mas[len(mas)//2][len(mas)//2] == -1:
            break


input_matrix()
print(satr)
# spirale_path()
write_answer()

#
# for j in range(N):
#     print(' '.join(map(str, mas[j])))

# a=[[i for i in range(11,36)]]
# a[0][0] = 11
# for j in range(1,len(a)):
#     for i in range(1, len(a)):
#         a[j].append(10 + i)
# print((a))

# for x in a:
#     if a.index(x) % 5 == 0:
#         print('')
#     print(x, end=' ')
